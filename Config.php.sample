<?php
class Config {
	// MySQL connection settings
	public static $mysqlHost = "";
	public static $mysqlDB = "";
	public static $mysqlUsername = "";
	public static $mysqlPassword = "";
	
	// Enable logging
	public static $log = true;
	
	// Sort by popylarity based on logs. (So logging must be enabled)
	public static $websitesSortByPopularity = true;
	public static $websites = array(
		array('id'=>1, 'name'=>"Iltalehti", 'url'=>"http://iltalehti.fi", 'listPath'=>"", 'logo'=>"iltalehti.png"),
		array('id'=>2, 'name'=>"Iltasanomat", 'url'=>"http://iltasanomat.fi", 'listPath'=>"", 'logo'=>"iltasanomat.png"),
		array('id'=>3, 'name'=>"Kaleva", 'url'=>"http://www.kaleva.fi", 'listPath'=>"/uutiset", 'logo'=>"kaleva.png"),
		array('id'=>4, 'name'=>"Helsingin Sanomat", 'url'=>"http://www.hs.fi", 'listPath'=>"/uutiset", 'logo'=>"hs.png"),
		array('id'=>5, 'name'=>"It-viikko", 'url'=>"http://www.itviikko.fi", 'listPath'=>"/uutislista", 'logo'=>"itviikko.png"),
		array('id'=>6, 'name'=>"MTV3", 'url'=>"http://mtv3.fi", 'listPath'=>"/rss/uutiset.rss", 'logo'=>"mtv3.png", 'rss'=>true),
		array('id'=>7, 'name'=>"BBC", 'url'=>"http://m.bbc.co.uk", 'listPath'=>"/news", 'logo'=>"bbc.png"),
		array('id'=>8, 'name'=>"New York Times", 'url'=>"http://www.nytimes.com", 'listPath'=>"/services/xml/rss/nyt/GlobalHome.xml", 'logo'=>"nyt.png", 'rss'=>true)
	);
	
	// Frequencies in minutes
	public static $listRefreshFreq = 3;
	public static $articleRefreshFreq = 60;
	
	public static $allowUserSettings = true;
	public static $userSettingsCookie = "settings";
	public static $settingsCookieExpire = 525600; // In minutes. 525600 is an one year.
	
	public static $defaultUserSettings = array(
		"lang"=>"fi",
		"theme"=>0,
		"limit"=>0
	);
	
	public static $locales = array("en", "fi");
	
	public static $themes = array("Gray", "Pink", "Black", "Yellow", "Dark blue", "Light blue");
	
	
	public static function GetUserSetting($name) {
		if(isset(self::$defaultUserSettings[$name])) {
			if(self::$allowUserSettings && isset($_COOKIE[self::$userSettingsCookie][$name]))
				return htmlspecialchars($_COOKIE[self::$userSettingsCookie][$name]);
			
			return self::$defaultUserSettings[$name];
		}
		
		return false;
	}
}
?>
